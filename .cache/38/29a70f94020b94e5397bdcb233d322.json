{"id":"jhaw","dependencies":[{"name":"F:\\Verstka\\global-idea\\package.json","includedInParent":true,"mtime":1616001241981},{"name":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\package.json","includedInParent":true,"mtime":1615381213206},{"name":"../enums.js","loc":{"line":1,"column":41},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\hide.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\enums.js"},{"name":"../utils/detectOverflow.js","loc":{"line":2,"column":27},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\hide.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\utils\\detectOverflow.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _enums = require(\"../enums.js\");\n\nvar _detectOverflow = _interopRequireDefault(require(\"../utils/detectOverflow.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [_enums.top, _enums.right, _enums.bottom, _enums.left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = (0, _detectOverflow.default)(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = (0, _detectOverflow.default)(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar _default = {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"6fbd4e7872903129633223121746fea7","cacheData":{"env":{}}}