{"id":"E2lw","dependencies":[{"name":"F:\\Verstka\\global-idea\\package.json","includedInParent":true,"mtime":1616000325916},{"name":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\package.json","includedInParent":true,"mtime":1615381213206},{"name":"./getWindow.js","loc":{"line":1,"column":22},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getViewportRect.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getWindow.js"},{"name":"./getDocumentElement.js","loc":{"line":2,"column":31},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getViewportRect.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getDocumentElement.js"},{"name":"./getWindowScrollBarX.js","loc":{"line":3,"column":32},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getViewportRect.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getWindowScrollBarX.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getViewportRect;\n\nvar _getWindow = _interopRequireDefault(require(\"./getWindow.js\"));\n\nvar _getDocumentElement = _interopRequireDefault(require(\"./getDocumentElement.js\"));\n\nvar _getWindowScrollBarX = _interopRequireDefault(require(\"./getWindowScrollBarX.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getViewportRect(element) {\n  var win = (0, _getWindow.default)(element);\n  var html = (0, _getDocumentElement.default)(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn't open, so if this isn't available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: \"Not Safari\" userAgent\n\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + (0, _getWindowScrollBarX.default)(element),\n    y: y\n  };\n}"},"sourceMaps":null,"error":null,"hash":"77640dce75323f0f80d3c64e60c58f31","cacheData":{"env":{}}}