{"id":"x3Ja","dependencies":[{"name":"F:\\Verstka\\global-idea\\package.json","includedInParent":true,"mtime":1616000325916},{"name":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\package.json","includedInParent":true,"mtime":1615381213206},{"name":"./instanceOf.js","loc":{"line":1,"column":29},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\dom-utils\\contains.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\dom-utils\\instanceOf.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = contains;\n\nvar _instanceOf = require(\"./instanceOf.js\");\n\nfunction contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && (0, _instanceOf.isShadowRoot)(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}"},"sourceMaps":null,"error":null,"hash":"dd93e0d5742be24a4c15c6c7a6613c89","cacheData":{"env":{}}}