{"id":"ebtt","dependencies":[{"name":"F:\\Verstka\\global-idea\\package.json","includedInParent":true,"mtime":1616000325916},{"name":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\package.json","includedInParent":true,"mtime":1615381213206},{"name":"../enums.js","loc":{"line":1,"column":41},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\computeStyles.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\enums.js"},{"name":"../dom-utils/getOffsetParent.js","loc":{"line":2,"column":28},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\computeStyles.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getOffsetParent.js"},{"name":"../dom-utils/getWindow.js","loc":{"line":3,"column":22},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\computeStyles.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getWindow.js"},{"name":"../dom-utils/getDocumentElement.js","loc":{"line":4,"column":31},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\computeStyles.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getDocumentElement.js"},{"name":"../dom-utils/getComputedStyle.js","loc":{"line":5,"column":29},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\computeStyles.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getComputedStyle.js"},{"name":"../utils/getBasePlacement.js","loc":{"line":6,"column":29},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\computeStyles.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\utils\\getBasePlacement.js"},{"name":"../utils/math.js","loc":{"line":7,"column":22},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\computeStyles.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\utils\\math.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapToStyles = mapToStyles;\nexports.default = void 0;\n\nvar _enums = require(\"../enums.js\");\n\nvar _getOffsetParent = _interopRequireDefault(require(\"../dom-utils/getOffsetParent.js\"));\n\nvar _getWindow = _interopRequireDefault(require(\"../dom-utils/getWindow.js\"));\n\nvar _getDocumentElement = _interopRequireDefault(require(\"../dom-utils/getDocumentElement.js\"));\n\nvar _getComputedStyle = _interopRequireDefault(require(\"../dom-utils/getComputedStyle.js\"));\n\nvar _getBasePlacement = _interopRequireDefault(require(\"../utils/getBasePlacement.js\"));\n\nvar _math = require(\"../utils/math.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-next-line import/no-unused-modules\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: (0, _math.round)((0, _math.round)(x * dpr) / dpr) || 0,\n    y: (0, _math.round)((0, _math.round)(y * dpr) / dpr) || 0\n  };\n}\n\nfunction mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets;\n\n  var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === 'function' ? roundOffsets(offsets) : offsets,\n      _ref3$x = _ref3.x,\n      x = _ref3$x === void 0 ? 0 : _ref3$x,\n      _ref3$y = _ref3.y,\n      y = _ref3$y === void 0 ? 0 : _ref3$y;\n\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = _enums.left;\n  var sideY = _enums.top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = (0, _getOffsetParent.default)(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === (0, _getWindow.default)(popper)) {\n      offsetParent = (0, _getDocumentElement.default)(popper);\n\n      if ((0, _getComputedStyle.default)(offsetParent).position !== 'static') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === _enums.top) {\n      sideY = _enums.bottom; // $FlowFixMe[prop-missing]\n\n      y -= offsetParent[heightProp] - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === _enums.left) {\n      sideX = _enums.right; // $FlowFixMe[prop-missing]\n\n      x -= offsetParent[widthProp] - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) < 2 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref4) {\n  var state = _ref4.state,\n      options = _ref4.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (\"production\" !== \"production\") {\n    var transitionProperty = (0, _getComputedStyle.default)(state.elements.popper).transitionProperty || '';\n\n    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {\n      return transitionProperty.indexOf(property) >= 0;\n    })) {\n      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));\n    }\n  }\n\n  var commonStyles = {\n    placement: (0, _getBasePlacement.default)(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar _default = {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"d6f0f23bb59fcf1a93bf2cc4acc5d53c","cacheData":{"env":{"NODE_ENV":"production"}}}