{"id":"XHUo","dependencies":[{"name":"F:\\Verstka\\global-idea\\package.json","includedInParent":true,"mtime":1616000325916},{"name":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\package.json","includedInParent":true,"mtime":1615381213206}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.modifierPhases = exports.afterWrite = exports.write = exports.beforeWrite = exports.afterMain = exports.main = exports.beforeMain = exports.afterRead = exports.read = exports.beforeRead = exports.placements = exports.variationPlacements = exports.reference = exports.popper = exports.viewport = exports.clippingParents = exports.end = exports.start = exports.basePlacements = exports.auto = exports.left = exports.right = exports.bottom = exports.top = void 0;\nvar top = 'top';\nexports.top = top;\nvar bottom = 'bottom';\nexports.bottom = bottom;\nvar right = 'right';\nexports.right = right;\nvar left = 'left';\nexports.left = left;\nvar auto = 'auto';\nexports.auto = auto;\nvar basePlacements = [top, bottom, right, left];\nexports.basePlacements = basePlacements;\nvar start = 'start';\nexports.start = start;\nvar end = 'end';\nexports.end = end;\nvar clippingParents = 'clippingParents';\nexports.clippingParents = clippingParents;\nvar viewport = 'viewport';\nexports.viewport = viewport;\nvar popper = 'popper';\nexports.popper = popper;\nvar reference = 'reference';\nexports.reference = reference;\nvar variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexports.variationPlacements = variationPlacements;\nvar placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexports.placements = placements;\nvar beforeRead = 'beforeRead';\nexports.beforeRead = beforeRead;\nvar read = 'read';\nexports.read = read;\nvar afterRead = 'afterRead'; // pure-logic modifiers\n\nexports.afterRead = afterRead;\nvar beforeMain = 'beforeMain';\nexports.beforeMain = beforeMain;\nvar main = 'main';\nexports.main = main;\nvar afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexports.afterMain = afterMain;\nvar beforeWrite = 'beforeWrite';\nexports.beforeWrite = beforeWrite;\nvar write = 'write';\nexports.write = write;\nvar afterWrite = 'afterWrite';\nexports.afterWrite = afterWrite;\nvar modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];\nexports.modifierPhases = modifierPhases;"},"sourceMaps":null,"error":null,"hash":"5cba3e96ef45339449662445d380658f","cacheData":{"env":{}}}