{"id":"rNoN","dependencies":[{"name":"F:\\Verstka\\global-idea\\package.json","includedInParent":true,"mtime":1616001241981},{"name":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\package.json","includedInParent":true,"mtime":1615381213206},{"name":"../utils/getOppositePlacement.js","loc":{"line":1,"column":33},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\flip.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\utils\\getOppositePlacement.js"},{"name":"../utils/getBasePlacement.js","loc":{"line":2,"column":29},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\flip.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\utils\\getBasePlacement.js"},{"name":"../utils/getOppositeVariationPlacement.js","loc":{"line":3,"column":42},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\flip.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\utils\\getOppositeVariationPlacement.js"},{"name":"../utils/detectOverflow.js","loc":{"line":4,"column":27},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\flip.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\utils\\detectOverflow.js"},{"name":"../utils/computeAutoPlacement.js","loc":{"line":5,"column":33},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\flip.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\utils\\computeAutoPlacement.js"},{"name":"../enums.js","loc":{"line":6,"column":54},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\flip.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\enums.js"},{"name":"../utils/getVariation.js","loc":{"line":7,"column":25},"parent":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\modifiers\\flip.js","resolved":"F:\\Verstka\\global-idea\\node_modules\\@popperjs\\core\\lib\\utils\\getVariation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _getOppositePlacement = _interopRequireDefault(require(\"../utils/getOppositePlacement.js\"));\n\nvar _getBasePlacement = _interopRequireDefault(require(\"../utils/getBasePlacement.js\"));\n\nvar _getOppositeVariationPlacement = _interopRequireDefault(require(\"../utils/getOppositeVariationPlacement.js\"));\n\nvar _detectOverflow = _interopRequireDefault(require(\"../utils/detectOverflow.js\"));\n\nvar _computeAutoPlacement = _interopRequireDefault(require(\"../utils/computeAutoPlacement.js\"));\n\nvar _enums = require(\"../enums.js\");\n\nvar _getVariation = _interopRequireDefault(require(\"../utils/getVariation.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-next-line import/no-unused-modules\nfunction getExpandedFallbackPlacements(placement) {\n  if ((0, _getBasePlacement.default)(placement) === _enums.auto) {\n    return [];\n  }\n\n  var oppositePlacement = (0, _getOppositePlacement.default)(placement);\n  return [(0, _getOppositeVariationPlacement.default)(placement), oppositePlacement, (0, _getOppositeVariationPlacement.default)(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = (0, _getBasePlacement.default)(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [(0, _getOppositePlacement.default)(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat((0, _getBasePlacement.default)(placement) === _enums.auto ? (0, _computeAutoPlacement.default)(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = (0, _getBasePlacement.default)(placement);\n\n    var isStartVariation = (0, _getVariation.default)(placement) === _enums.start;\n\n    var isVertical = [_enums.top, _enums.bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = (0, _detectOverflow.default)(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? _enums.right : _enums.left : isStartVariation ? _enums.bottom : _enums.top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = (0, _getOppositePlacement.default)(mainVariationSide);\n    }\n\n    var altVariationSide = (0, _getOppositePlacement.default)(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases â€“ research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar _default = {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"0e9f4d40650dcb3b1003251ca6af1a55","cacheData":{"env":{}}}